plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-allopen'
    id 'kotlin-noarg'
}

allOpen {
    annotation 'com.artf.shoppinglistcompose.testing.OpenClass'
}
noArg {
    annotation 'com.artf.shoppinglistcompose.testing.NoArgClass'
}
android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'
    defaultConfig {
        applicationId "com.artf.shoppinglistcompose"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        String debugDir = 'src/debug/java'
        main.java.srcDirs += debugDir
        test.java.srcDirs += sharedTestDir
        androidTest.java.srcDirs += sharedTestDir
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = '1.8'
            freeCompilerArgs += ["-Xallow-jvm-ir-dependencies", "-Xskip-prerelease-check"]
            useIR = true
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerVersion '1.4.21'
        kotlinCompilerExtensionVersion "$versions.compose_version"
    }
    testOptions {
        animationsDisabled = true
        unitTests.returnDefaultValues = true
    }
    packagingOptions {
        pickFirst "META-INF/*"
    }
}

dependencies {
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.1"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
    implementation "androidx.appcompat:appcompat:$versions.support"
    implementation "androidx.activity:activity-ktx:$versions.activity_ktx"
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.preference:preference-ktx:$versions.preference"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    implementation "com.google.android.material:material:$versions.material"

    //Dex
    implementation "androidx.multidex:multidex:$versions.multidex"
    // Compose
    implementation "androidx.compose.ui:ui:$versions.compose_version"
    implementation "androidx.compose.ui:ui-tooling:$versions.compose_version"
    implementation "androidx.compose.foundation:foundation:$versions.compose_version"
    implementation "androidx.compose.material:material:$versions.compose_version"
//    implementation "androidx.compose.material:material-icons-core:$versions.compose_version"
//    implementation "androidx.compose.material:material-icons-extended:$versions.compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$versions.compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$versions.compose_version"

    //Koin
    implementation "org.koin:koin-android:$versions.koin"
    implementation "org.koin:koin-androidx-scope:$versions.koin"
    implementation "org.koin:koin-androidx-viewmodel:$versions.koin"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"

    //Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    //Test
    testImplementation "androidx.arch.core:core-testing:$versions.arch_core"
    testImplementation "com.google.truth:truth:$versions.truth"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.robolectric:annotations:$versions.robolectric"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"

    //Android Test
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$versions.compose_version"
    implementation("androidx.fragment:fragment-testing:$versions.fragment_testing", {
        exclude group: 'androidx.test', module: 'core'
    })
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"
    androidTestImplementation "com.google.truth:truth:$versions.truth"
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation "androidx.arch.core:core-testing:$versions.arch_core"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$versions.espresso"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$versions.espresso"
    androidTestImplementation "androidx.test:core:$versions.atsl_core"
    androidTestImplementation "androidx.test.ext:junit:$versions.atsl_junit"
    androidTestImplementation "androidx.test.ext:junit-ktx:$versions.atsl_junit"
    androidTestImplementation "androidx.test:monitor:$versions.atsl_monitor"
    androidTestImplementation "androidx.test:rules:$versions.atsl_rules"
    androidTestImplementation "androidx.test:runner:$versions.atsl_runner"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito"
    androidTestImplementation "org.mockito:mockito-core:$versions.mockito"
    androidTestImplementation "org.robolectric:annotations:$versions.robolectric"
}

// we need all open to run tests which we enable only for debug builds.
project.tasks.whenTaskAdded {
    if (it.name == "testReleaseUnitTest") {
        it.enabled = false
    }
}